{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/songbirds/src/components/CurrentAnswer/CurrentAnswer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Circle from '../Answers/Circle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CurrentAnswer = ({\n  question,\n  currentAnswers,\n  selectedAnswer,\n  setSelectedAnswer,\n  isRightAnswer,\n  setPoints,\n  points,\n  wrongAnswers,\n  step,\n  setWrongAnswers\n}) => {\n  _s();\n\n  const rightAnswer = item => {\n    setSelectedAnswer({ ...item,\n      isChecked: true\n    });\n  };\n\n  useEffect(() => {\n    console.log(selectedAnswer);\n\n    if (Object.keys(selectedAnswer).length > 0) {\n      if (selectedAnswer.id === question.id) {\n        let pts = points + 5 - wrongAnswers.length;\n        setPoints(pts);\n      } else {\n        let exists = wrongAnswers.find(el => el.id === selectedAnswer.id);\n\n        if (!exists) {\n          wrongAnswers.push({ ...selectedAnswer\n          });\n        }\n      }\n    }\n  }, [selectedAnswer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: currentAnswers.map(el => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => rightAnswer(el),\n        disabled: isRightAnswer,\n        className: \"answers__button\",\n        children: [/*#__PURE__*/_jsxDEV(Circle, {\n          question: question,\n          selectedAnswer: selectedAnswer,\n          currentAnswers: currentAnswers,\n          index: el.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), el.name]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CurrentAnswer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CurrentAnswer;\nexport default CurrentAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentAnswer\");","map":{"version":3,"sources":["/Users/macbook/Desktop/songbirds/src/components/CurrentAnswer/CurrentAnswer.js"],"names":["React","useEffect","Circle","CurrentAnswer","question","currentAnswers","selectedAnswer","setSelectedAnswer","isRightAnswer","setPoints","points","wrongAnswers","step","setWrongAnswers","rightAnswer","item","isChecked","console","log","Object","keys","length","id","pts","exists","find","el","push","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,cAA3B;AAA2CC,EAAAA,iBAA3C;AAA8DC,EAAAA,aAA9D;AAA6EC,EAAAA,SAA7E;AAAwFC,EAAAA,MAAxF;AAAgGC,EAAAA,YAAhG;AAA8GC,EAAAA,IAA9G;AAAoHC,EAAAA;AAApH,CAAD,KAA0I;AAAA;;AAC5J,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1BR,IAAAA,iBAAiB,CAAC,EAAC,GAAGQ,IAAJ;AAAUC,MAAAA,SAAS,EAAE;AAArB,KAAD,CAAjB;AACH,GAFD;;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ;;AACA,QAAIa,MAAM,CAACC,IAAP,CAAYd,cAAZ,EAA4Be,MAA5B,GAAqC,CAAzC,EAA2C;AACvC,UAAIf,cAAc,CAACgB,EAAf,KAAsBlB,QAAQ,CAACkB,EAAnC,EAAsC;AAClC,YAAIC,GAAG,GAAGb,MAAM,GAAG,CAAT,GAAaC,YAAY,CAACU,MAApC;AACAZ,QAAAA,SAAS,CAACc,GAAD,CAAT;AACH,OAHD,MAII;AACA,YAAIC,MAAM,GAAGb,YAAY,CAACc,IAAb,CAAkBC,EAAE,IAAIA,EAAE,CAACJ,EAAH,KAAUhB,cAAc,CAACgB,EAAjD,CAAb;;AACA,YAAG,CAACE,MAAJ,EAAY;AACRb,UAAAA,YAAY,CAACgB,IAAb,CAAkB,EAAC,GAAGrB;AAAJ,WAAlB;AACH;AACJ;AACJ;AAEJ,GAfQ,EAeN,CAACA,cAAD,CAfM,CAAT;AAgBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAEQD,cAAc,CAACuB,GAAf,CAAmBF,EAAE,iBACjB;AAEI,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAACY,EAAD,CAF9B;AAGI,QAAA,QAAQ,EAAElB,aAHd;AAII,QAAA,SAAS,EAAC,iBAJd;AAAA,gCAKQ,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEJ,QAAlB;AAA4B,UAAA,cAAc,EAAEE,cAA5C;AAA4D,UAAA,cAAc,EAAED,cAA5E;AAA4F,UAAA,KAAK,EAAEqB,EAAE,CAACJ;AAAtG;AAAA;AAAA;AAAA;AAAA,gBALR,EAMSI,EAAE,CAACG,IANZ;AAAA,SACSH,EAAE,CAACJ,EADZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkBH,CAtCD;;GAAMnB,a;;KAAAA,a;AAwCN,eAAeA,aAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Circle from '../Answers/Circle'\n\nconst CurrentAnswer = ({question, currentAnswers, selectedAnswer, setSelectedAnswer, isRightAnswer, setPoints, points, wrongAnswers, step, setWrongAnswers}) => {\n    const rightAnswer = (item) => {\n        setSelectedAnswer({...item, isChecked: true})\n    }\n    useEffect(() => {\n        console.log(selectedAnswer)\n        if (Object.keys(selectedAnswer).length > 0){\n            if (selectedAnswer.id === question.id){\n                let pts = points + 5 - wrongAnswers.length;\n                setPoints(pts)\n            }\n            else{\n                let exists = wrongAnswers.find(el => el.id === selectedAnswer.id)\n                if(!exists) {\n                    wrongAnswers.push({...selectedAnswer})\n                }\n            }\n        }\n\n    }, [selectedAnswer])\n    return (\n        <>\n            <div className=\"answers\">\n                {\n                    currentAnswers.map(el => (\n                        <button\n                            key={el.id}\n                            onClick={() => rightAnswer(el)}\n                            disabled={isRightAnswer}\n                            className='answers__button'>\n                                <Circle question={question} selectedAnswer={selectedAnswer} currentAnswers={currentAnswers} index={el.id}/>\n                                {el.name}\n                        </button>\n                    ))\n                }\n            </div>\n        </>\n    );\n};\n\nexport default CurrentAnswer;"]},"metadata":{},"sourceType":"module"}