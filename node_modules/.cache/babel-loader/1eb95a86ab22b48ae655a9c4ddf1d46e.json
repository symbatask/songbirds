{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/songbirds/src/components/BirdsApp/BirdsApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport birdsData from \"../../birdsData\";\nimport Question from \"../Question/Question\";\nimport CurrentAnswer from \"../CurrentAnswer/CurrentAnswer\";\nimport Answers from \"../Answers/Answers\";\nimport NextStep from \"../NextStep/NextStep\";\nimport EndGame from \"../EndGame/EndGame\";\nimport Header from \"../Header/Header\";\nimport correct from './jg-032316-sfx-elearning-correct-answer-sound-1.mp3';\nimport wrong from './z_uk-proigrysha.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BirdsApp = () => {\n  _s();\n\n  const [question, setQuestion] = useState({});\n  const [step, setStep] = useState(1);\n  const [selectedAnswer, setSelectedAnswer] = useState({});\n  const [isRightAnswer, setIsRightAnswer] = useState(false);\n  const [points, setPoints] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState([]);\n\n  const isCurrentAnswerRight = () => {\n    if (selectedAnswer.id === question.id) {\n      setIsRightAnswer(true);\n      new Audio(correct).play();\n    } else {\n      setIsRightAnswer(false);\n      new Audio(wrong).play();\n    }\n  };\n\n  let currentAnswers = birdsData[step - 1];\n  useEffect(() => {\n    setCurrentQuestion();\n  }, [currentAnswers]);\n  useEffect(() => {\n    isCurrentAnswerRight();\n  });\n\n  const resetAll = () => {\n    setQuestion({});\n    setSelectedAnswer({});\n    setStep(1);\n    setIsRightAnswer(false);\n  };\n\n  const setCurrentQuestion = () => {\n    if (currentAnswers) {\n      const questionId = getRandomAudio(1, currentAnswers.length);\n      const question = currentAnswers.find(el => el.id === questionId);\n      setQuestion(question);\n    }\n  };\n\n  const getRandomAudio = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        points: points,\n        step: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), step - 1 < birdsData.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          selectedAnswer: selectedAnswer,\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App__answers-and-info\",\n          children: [/*#__PURE__*/_jsxDEV(CurrentAnswer, {\n            question: question,\n            isRightAnswer: isRightAnswer,\n            setSelectedAnswer: setSelectedAnswer,\n            selectedAnswer: selectedAnswer,\n            currentAnswers: currentAnswers,\n            step: step,\n            setStep: setStep,\n            points: points,\n            setPoints: setPoints,\n            wrongAnswers: wrongAnswers,\n            setWrongAnswers: setWrongAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Answers, {\n            selectedAnswer: selectedAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(NextStep, {\n          isRightAnswer: isRightAnswer,\n          setStep: setStep,\n          step: step,\n          setSelectedAnswer: setSelectedAnswer,\n          setWrongAnswers: setWrongAnswers,\n          wrongAnswers: wrongAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(EndGame, {\n        points: points,\n        resetAll: resetAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BirdsApp, \"iGj4Ftc/tOtl67+PGDevfsl4XxY=\");\n\n_c = BirdsApp;\nexport default BirdsApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdsApp\");","map":{"version":3,"sources":["/Users/macbook/Desktop/songbirds/src/components/BirdsApp/BirdsApp.js"],"names":["React","useState","useEffect","birdsData","Question","CurrentAnswer","Answers","NextStep","EndGame","Header","correct","wrong","BirdsApp","question","setQuestion","step","setStep","selectedAnswer","setSelectedAnswer","isRightAnswer","setIsRightAnswer","points","setPoints","wrongAnswers","setWrongAnswers","isCurrentAnswerRight","id","Audio","play","currentAnswers","setCurrentQuestion","resetAll","questionId","getRandomAudio","length","find","el","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport birdsData from \"../../birdsData\";\nimport Question from \"../Question/Question\";\nimport CurrentAnswer from \"../CurrentAnswer/CurrentAnswer\";\nimport Answers from \"../Answers/Answers\";\nimport NextStep from \"../NextStep/NextStep\";\nimport EndGame from \"../EndGame/EndGame\";\nimport Header from \"../Header/Header\";\nimport correct from './jg-032316-sfx-elearning-correct-answer-sound-1.mp3'\nimport wrong from './z_uk-proigrysha.mp3'\n\nconst BirdsApp = () => {\n    const [question, setQuestion] = useState({})\n    const [step, setStep] = useState(1)\n    const [selectedAnswer, setSelectedAnswer] = useState({})\n    const [isRightAnswer, setIsRightAnswer] = useState(false)\n    const [points, setPoints] = useState(0)\n    const [wrongAnswers, setWrongAnswers] = useState([])\n    const isCurrentAnswerRight = () => {\n        if (selectedAnswer.id === question.id) {\n            setIsRightAnswer(true)\n            new Audio(correct).play()\n        } else {\n            setIsRightAnswer(false)\n            new Audio(wrong).play()\n\n        }\n    }\n    let currentAnswers = birdsData[step - 1]\n\n    useEffect(() => {\n        setCurrentQuestion()\n    }, [currentAnswers])\n\n    useEffect(() => {\n        isCurrentAnswerRight()\n    })\n\n    const resetAll = () => {\n        setQuestion({})\n        setSelectedAnswer({})\n        setStep(1)\n        setIsRightAnswer(false)\n    }\n    const setCurrentQuestion = () => {\n        if(currentAnswers){\n            const questionId = (getRandomAudio(1, currentAnswers.length))\n            const question = currentAnswers.find(el => el.id === questionId)\n            setQuestion(question)\n        }\n    }\n\n    const getRandomAudio = (min, max) => Math.floor(Math.random() * (max - min) + min)\n\n    return (\n        <div className='app'>\n            <div className=\"container\">\n                <Header points={points} step={step}/>\n                {\n                    step - 1 < birdsData.length\n                        ? <>\n                            <Question selectedAnswer={selectedAnswer} question={question}/>\n                            <div className=\"App__answers-and-info\">\n                                <CurrentAnswer question={question} isRightAnswer={isRightAnswer} setSelectedAnswer={setSelectedAnswer} selectedAnswer={selectedAnswer} currentAnswers={currentAnswers} step={step} setStep={setStep} points={points} setPoints={setPoints} wrongAnswers={wrongAnswers} setWrongAnswers={setWrongAnswers}/>\n                                <Answers selectedAnswer={selectedAnswer}/>\n                            </div>\n                            <NextStep isRightAnswer={isRightAnswer} setStep={setStep} step={step} setSelectedAnswer={setSelectedAnswer} setWrongAnswers={setWrongAnswers} wrongAnswers={wrongAnswers}/>\n                        </>\n                        : <EndGame points={points} resetAll={resetAll} />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default BirdsApp;"]},"metadata":{},"sourceType":"module"}